name: 🚀 Fataplus CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '8'

jobs:
  # 🔍 Code Quality & Security
  lint-and-typecheck:
    name: 🔍 Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Run ESLint
        run: pnpm run lint

      - name: 🏗️ Type check
        run: pnpm run build

      - name: 🔒 Security audit
        run: pnpm audit --audit-level moderate
        continue-on-error: true

  # 🧪 Testing Suite
  test:
    name: 🧪 Test Suite
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    strategy:
      matrix:
        test-type: [unit, integration]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build project
        run: pnpm run build

      - name: 🧪 Run ${{ matrix.test-type }} tests
        run: pnpm run test:${{ matrix.test-type }}
        env:
          # Test environment variables
          AUTH_SECRET: ${{ secrets.AUTH_SECRET || 'test-secret-key-for-ci' }}
          DATABASE_URL: ':memory:'

  # 🎭 E2E Testing
  e2e-tests:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 📥 Install Playwright
        run: pnpm exec playwright install --with-deps

      - name: 🏗️ Build project
        run: pnpm run build

      - name: 🎭 Run E2E tests
        run: pnpm run test:e2e
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET || 'test-secret-key-for-ci' }}
          DATABASE_URL: ':memory:'

      - name: 📤 Upload E2E artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  # 🏗️ Build & Validate
  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck, test]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🏗️ Build for production
        run: pnpm run build
        env:
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          NUXT_SECURITY_CSRF_COOKIE_NAME: '__HOST-nuxt-security.csrf'

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            .nuxt/
            .output/
          retention-days: 1

  # 🚀 Deploy to Production
  deploy-production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, e2e-tests]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://fataplus-app.fenohery.workers.dev
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🚀 Deploy to NuxtHub
        run: pnpm run deploy
        env:
          NUXT_HUB_PROJECT_SECRET_KEY: ${{ secrets.NUXT_HUB_PROJECT_SECRET_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

      - name: 🎉 Deployment Success
        run: |
          echo "🎉 Successfully deployed to production!"
          echo "🌐 URL: https://fataplus-app.fenohery.workers.dev"
          echo "📚 API Docs: Available in NuxtHub Admin Panel"

  # 🔍 Preview Deployment (for PRs)
  deploy-preview:
    name: 🔍 Deploy Preview
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'pull_request'
    environment:
      name: preview
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      - name: 📥 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Deploy Preview
        run: pnpm run deploy:preview
        env:
          NUXT_HUB_PROJECT_SECRET_KEY: ${{ secrets.NUXT_HUB_PROJECT_SECRET_KEY }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

      - name: 💬 Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const { data: deployments } = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              environment: 'preview'
            });
            
            if (deployments.length > 0) {
              const previewUrl = `https://preview-${context.payload.number}.fataplus-app.fenohery.workers.dev`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `🔍 **Preview Deployment Ready!**
                
                🌐 **Preview URL**: ${previewUrl}
                📚 **API Documentation**: Available in NuxtHub Admin
                🎯 **SuperAdmin**: \`admin@fata.plus\` / \`FataPlus2025@Admin\`
                
                This preview will be available until the PR is merged or closed.`
              });
            }

  # 📊 Performance & Security Report
  lighthouse:
    name: 📊 Lighthouse Performance
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://fataplus-app.fenohery.workers.dev
            https://fataplus-app.fenohery.workers.dev/auth/login
            https://fataplus-app.fenohery.workers.dev/marketplace
          uploadArtifacts: true
          temporaryPublicStorage: true

  # 🚨 Notification
  notify:
    name: 🚨 Notify Team
    runs-on: ubuntu-latest
    needs: [deploy-production, lighthouse]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: 🎉 Success Notification
        if: needs.deploy-production.result == 'success'
        run: |
          echo "🎉 Fataplus Successfully Deployed!"
          echo "✅ All checks passed"
          echo "🌐 Production: https://fataplus-app.fenohery.workers.dev"
          echo "📚 API Docs: Available in NuxtHub Admin Panel"

      - name: 🚨 Failure Notification
        if: needs.deploy-production.result == 'failure'
        run: |
          echo "🚨 Deployment Failed!"
          echo "❌ Check the logs above for details"
          echo "🔧 Please fix the issues and try again" 